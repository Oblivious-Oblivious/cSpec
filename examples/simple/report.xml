<?xml version="1.0" encoding="utf-8"?>
<modules duration="0.69850 ms">
    <module name="cDataLib", failures="23", skipped="1", tests="50", timestamp="2020-04-25 21:58:03">
        <describe name="cSpec functions">
            <it name="succeeds `assert_that`", status="passing" />
            <it name="fails `assert_that`", status="failing">
                <failure>
                    <position line="simple.spec.c:15:" />
                    <error message="|> `1 isnot 1` should be true" />
                </failure>
            <it/>
            <it name="succeeds `nassert_that`", status="passing" />
            <it name="fails `nassert_that`", status="failing">
                <failure>
                    <position line="simple.spec.c:22:" />
                    <error message="|> `2 is 2` should be false" />
                </failure>
            <it/>
            <it name="succeeds `assert_that_int`", status="passing" />
            <it name="fails `assert_that_int`", status="failing">
                <failure>
                    <position line="simple.spec.c:29:" />
                    <error message="|> `3` expected but got `2" />
                </failure>
            <it/>
            <it name="succeeds `nassert_that_int`", status="passing" />
            <it name="fails `nassert_that_int`", status="failing">
                <failure>
                    <position line="simple.spec.c:36:" />
                    <error message="|> `4` expected but got `4" />
                </failure>
            <it/>
            <it name="succeeds `assert_that_double`", status="passing" />
            <it name="fails `assert_that_double`", status="failing">
                <failure>
                    <position line="simple.spec.c:43:" />
                    <error message="|> `4.2` expected but got `3.2" />
                </failure>
            <it/>
            <xit name="SKIP THAT TEST", status="skipped" />
            <it name="succeeds `nassert_that_double`", status="passing" />
            <it name="fails `nassert_that_double`", status="failing">
                <failure>
                    <position line="simple.spec.c:54:" />
                    <error message="|> `6.6` expected but got `6.6" />
                </failure>
            <it/>
            <it name="succeeds `assert_that_charptr`", status="passing" />
            <it name="fails `assert_that_charptr`", status="failing">
                <failure>
                    <position line="simple.spec.c:61:" />
                    <error message="|> `nottestme` expected but got `testme" />
                </failure>
            <it/>
            <it name="succeeds `nassert_that_charptr`", status="passing" />
            <it name="fails `nassert_that_charptr`", status="failing">
                <failure>
                    <position line="simple.spec.c:68:" />
                    <error message="|> `ok str` expected but got `ok str" />
                </failure>
            <it/>
        </describe>
    </module>
    <module name="second", failures="23", skipped="1", tests="50", timestamp="2020-04-25 21:58:03">
        <describe name="DESC 1">
            <it name="before on desc 1", status="passing" />
            <it name="does on 1", status="passing" />
        </describe>
        <describe name="DESC 2">
            <it name="does on 2", status="passing" />
        </describe>
        <describe name="DESC 3">
            <it name="does on 3", status="passing" />
        </describe>
        <describe name="Array Assertions">
            <it name="succeeds `assert_that_int_array`", status="passing" />
            <it name="fails `assert_that_int_array`", status="failing">
                <failure>
                    <position line="simple.spec.c:117:" />
                    <error message="|> `[7, 7, 7, 7, 7]` expected but got `[1, 2, 3, 4, 5]" />
                </failure>
                <failure>
                    <position line="simple.spec.c:118:" />
                    <error message="|> `[1, 2, 3, 4, 1]` expected but got `[7, 7, 7, 7, 7]" />
                </failure>
            <it/>
            <it name="succeeds `nassert_that_int_array`", status="passing" />
            <it name="fails `nassert_that_int_array`", status="failing">
                <failure>
                    <position line="simple.spec.c:126:" />
                    <error message="|> `[7, 7, 7, 7, 7]` expected but got `[7, 7, 7, 7, 7]" />
                </failure>
            <it/>
            <it name="succeeds `assert_that_double_array`", status="passing" />
            <it name="fails `assert_that_double_array`", status="failing">
                <failure>
                    <position line="simple.spec.c:134:" />
                    <error message="|> `[7.7, 7.7, 7.7, 7.7, 7.7]` expected but got `[1.1, 2.2, 3.3, 4.4, 5.5]" />
                </failure>
                <failure>
                    <position line="simple.spec.c:135:" />
                    <error message="|> `[1.1, 2.2, 3.3, 4.4, 1.1]` expected but got `[7.7, 7.7, 7.7, 7.7, 7.7]" />
                </failure>
            <it/>
            <it name="succeeds `nassert_that_double_array`", status="passing" />
            <it name="fails `nassert_that_double_array`", status="failing">
                <failure>
                    <position line="simple.spec.c:143:" />
                    <error message="|> `[7.7, 7.7, 7.7, 7.7, 7.7]` expected but got `[7.7, 7.7, 7.7, 7.7, 7.7]" />
                </failure>
            <it/>
            <it name="succeeds `assert_that_charptr_array`", status="passing" />
            <it name="fails `assert_that_charptr_array`", status="failing">
                <failure>
                    <position line="simple.spec.c:151:" />
                    <error message="|> `[g, g, g, g, g]` expected but got `[a, b, c, d, e]" />
                </failure>
                <failure>
                    <position line="simple.spec.c:152:" />
                    <error message="|> `[a, b, c, d, ]` expected but got `[g, g, g, g, g]" />
                </failure>
            <it/>
            <it name="succeeds `nassert_that_charptr_array`", status="failing">
                <failure>
                    <position line="simple.spec.c:157:" />
                    <error message="|> `[a, b, c, d, e]` expected but got `[a, b, c, d, e]" />
                </failure>
            <it/>
            <it name="fails `nassert_that_charptr_array`", status="failing">
                <failure>
                    <position line="simple.spec.c:161:" />
                    <error message="|> `[g, g, g, g, g]` expected but got `[g, g, g, g, g]" />
                </failure>
            <it/>
        </describe>
    </module>
    <module name="another_third", failures="23", skipped="1", tests="50", timestamp="2020-04-25 21:58:03">
        <describe name="Generic type assertions">
            <context name="when using generic asserts">
                <it name="succeeds generic int assertion", status="passing" />
                <it name="fails generic int assertion", status="failing">
                    <failure>
                        <position line="simple.spec.c:173:" />
                        <error message="|> `3` expected but got `2" />
                    </failure>
                <it/>
                <it name="succeeds generic int nassertion", status="passing" />
                <it name="fails generic int nassertion", status="failing">
                    <failure>
                        <position line="simple.spec.c:180:" />
                        <error message="|> `4` expected but got `4" />
                    </failure>
                <it/>
                <it name="succeeds generic double assertion", status="passing" />
                <it name="fails generic double assertion", status="failing">
                    <failure>
                        <position line="simple.spec.c:187:" />
                        <error message="|> `4.2` expected but got `3.2" />
                    </failure>
                <it/>
                <it name="succeeds generic double nassertion", status="passing" />
                <it name="fails generic double nassertion", status="failing">
                    <failure>
                        <position line="simple.spec.c:194:" />
                        <error message="|> `6.6` expected but got `6.6" />
                    </failure>
                <it/>
                <it name="fails generic int with double assertion", status="failing">
                    <failure>
                        <position line="simple.spec.c:198:" />
                        <error message="|> `2.2` expected but got `2" />
                    </failure>
                <it/>
                <it name="fails generic double with int assertion", status="failing">
                    <failure>
                        <position line="simple.spec.c:201:" />
                        <error message="|> `3` expected but got `3.3" />
                    </failure>
                <it/>
                <it name="succeeds generic int with double nassertion", status="passing" />
                <it name="succeeds generic double with int nassertion", status="passing" />
                <it name="succeeds generic string assertion", status="passing" />
                <it name="fails generic string assertion", status="failing">
                    <failure>
                        <position line="simple.spec.c:215:" />
                        <error message="|> `nottestme` expected but got `testme" />
                    </failure>
                <it/>
                <it name="succeeds generic string nassertion", status="passing" />
                <it name="fails generic string nassertion", status="failing">
                    <failure>
                        <position line="simple.spec.c:222:" />
                        <error message="|> `ok str` expected but got `ok str" />
                    </failure>
                <it/>
            </context>
            <context name="when we are finished">
                <it name="does nothing", status="passing" />
            </context>
        </describe>
    </module>
</modules>
